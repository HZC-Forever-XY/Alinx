#!/usr/bin/env python
# license removed for brevity
from sensor_dep.adc_func import adc_read
import rospy
from std_msgs.msg import String, Float64, Float32


def ser_adc():
    #adc_read=300  
    pub = rospy.Publisher('wind_direction_apparent', Float64, queue_size=10)
    rate = rospy.Rate(10) # 10hz
    while not rospy.is_shutdown():
        # adc_str = "adc = %d timing = %s" %(adc_read(1),rospy.get_time())
        # rospy.loginfo(adc_str)
        wind_direction_apparent = Float64()
        wind_direction_apparent.data =int(float(adc_read(1))/3026*360)
       # wind_direction_apparent.data = adc_read/10
        if wind_direction_apparent.data>360:
            wind_direction_apparent.data = 360
        pub.publish(wind_direction_apparent)
        print("wind:")
        print(wind_direction_apparent.data)
        rate.sleep()
 
if __name__ == '__main__':
    try:
        rospy.init_node('ser_adc', anonymous=True)
        ser_adc()
    except rospy.ROSInterruptException:
        pass
